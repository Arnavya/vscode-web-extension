{
	"name": "cicero-vscode-extension",
	"displayName": "Accord Project",
	"description": "Accord Project extension for Visual Studio Code, providing tools for template development.",
	"author": "Accord Project",
	"license": "Apache-2.0",
	"version": "1.0.0",
	"icon": "icon.png",
	"browser": "./client/dist/browserClientMain",
	"repository": {
		"type": "git",
		"url": "https://github.com/accordproject/cicero-vscode-extension"
	},
	"publisher": "accordproject",
	"categories": [
		"Programming Languages",
		"Snippets"
	],
	"keywords": [
		"multi-root ready",
		"accord project",
		"legal",
		"cicero",
		"templates"
	],
	"engines": {
		"vscode": "^1.43.0"
	},
	"capabilities": {
		"virtualWorkspaces": {
			"supported": "limited",
			"description": "In virtual workspaces, resolving and finding references across files is not supported."
		}
	},
	"activationEvents": [
		"onLanguage:concerto"
	],
	"contributes": {
		"configuration": [
			{
				"order": 22,
				"id": "cicero-vscode-extension",
				"title": "cicero-vscode-extension",
				"properties": {
					"cicero-vscode-extension.trace.server": {
						"type": "string",
						"scope": "window",
						"enum": [
							"off",
							"messages",
							"verbose"
						],
						"default": "off",
						"description": "Traces the communication between VS Code and the cicero-vscode-extension language server."
					}
				}
			}
		],
		"languages": [
			{
				"id": "templatemark",
				"aliases": [
					"TemplateMark"
				],
				"extensions": [
					".tem.md"
				],
				"configuration": "./client/templatemark.language-configuration.json"
			},
			{
				"id": "concerto",
				"aliases": [
					"Concerto model",
					"concerto"
				],
				"extensions": [
					".cto"
				],
				"configuration": "./client/concerto.language-configuration.json"
			}
		],
		"grammars": [
			{
				"language": "templatemark",
				"scopeName": "source.templatemark",
				"path": "./client/syntaxes/templatemark.tmLanguage.json"
			},
			{
				"language": "concerto",
				"scopeName": "source.concerto",
				"path": "./client/syntaxes/concerto.tmLanguage.json"
			}
		],
		"snippets": [
			{
				"language": "concerto",
				"path": "./client/snippets/concerto.json"
			}
		],
		"commands": [
			{
				"command": "cicero-vscode-extension.exportArchive",
				"title": "Export Cicero Archive",
				"category": "Accord Project"
			},
			{
				"command": "cicero-vscode-extension.downloadModels",
				"title": "Download External Models",
				"category": "Accord Project"
			},
			{
				"command": "cicero-vscode-extension.exportClassDiagram",
				"title": "Export Class Diagram",
				"category": "Accord Project"
			},
			{
				"command": "cicero-vscode-extension.triggerClause",
				"title": "Trigger",
				"category": "Accord Project"
			},
			{
				"command": "cicero-vscode-extension.parseClause",
				"title": "Parse",
				"category": "Accord Project"
			},
			{
				"command": "cicero-vscode-extension.verifyTemplateSignature",
				"title": "Verify Signature",
				"category": "Accord Project"
			},
			{
				"command": "cicero-vscode-extension.compileToTarget",
				"title": "Compile Model To Target",
				"category": "Accord Project"
			},
			{
				"command": "cicero-vscode-extension.draftClause",
				"title": "Draft Clause",
				"category": "Accord Project"
			},
			{
				"command": "cicero-vscode-extension.showPreview",
				"title": "Open Preview",
				"icon": {
					"light": "./assets/light/open-preview.svg",
					"dark": "./assets/dark/open-preview.svg"
				},
				"category": "Accord Project"
			}
		],
		"menus": {
			"explorer/context": [
				{
					"when": "explorerResourceIsFolder",
					"command": "cicero-vscode-extension.exportArchive",
					"group": "AccordProject@1"
				},
				{
					"when": "resourceLangId == concerto",
					"command": "cicero-vscode-extension.downloadModels",
					"group": "AccordProject@2"
				},
				{
					"when": "resourceLangId == concerto",
					"command": "cicero-vscode-extension.exportClassDiagram",
					"group": "AccordProject@3"
				},
				{
					"when": "explorerResourceIsFolder && !isWeb",
					"command": "cicero-vscode-extension.triggerClause",
					"group": "AccordProject@4"
				},
				{
					"when": "resourceLangId == markdown",
					"command": "cicero-vscode-extension.parseClause",
					"group": "AccordProject@5"
				},
				{
					"when": "explorerResourceIsFolder && !isWeb",
					"command": "cicero-vscode-extension.verifyTemplateSignature",
					"group": "AccordProject@6"
				},
				{
					"when": "resourceLangId == templatemark || resourceLangId == concerto",
					"command": "cicero-vscode-extension.showPreview",
					"group": "AccordProject@7"
				},
				{
					"when": "resourceLangId == concerto",
					"command": "cicero-vscode-extension.compileToTarget",
					"group": "AccordProject@8"
				},
				{
					"when": "resourceLangId == json",
					"command": "cicero-vscode-extension.draftClause",
					"group": "AccordProject@9"
				}
			],
			"editor/title": [
				{
					"when": "resourceLangId == templatemark || resourceLangId == concerto",
					"command": "cicero-vscode-extension.showPreview",
					"group": "navigation"
				}
			],
			"commandPalette": [
				{
					"command": "cicero-vscode-extension.exportArchive",
					"when": "false"
				},
				{
					"command": "cicero-vscode-extension.verifyTemplateSignature",
					"when": "false"
				},
				{
					"command": "cicero-vscode-extension.downloadModels",
					"when": "false"
				},
				{
					"command": "cicero-vscode-extension.exportClassDiagram",
					"when": "false"
				},
				{
					"command": "cicero-vscode-extension.triggerClause",
					"when": "false"
				},
				{
					"command": "cicero-vscode-extension.parseClause",
					"when": "false"
				},
				{
					"command": "cicero-vscode-extension.compileToTarget",
					"when": "false"
				},
				{
					"command": "cicero-vscode-extension.draftClause",
					"when": "false"
				}
			]
		}
	},
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"compile": "webpack",
		"watch": "webpack --watch",
		"package": "webpack --mode production --devtool hidden-source-map",
		"lint": "eslint ./client/src ./server/src --ext .ts,.tsx",
		"postinstall": "cd client && npm install && cd ../server && npm install && cd ..",
		"start": "webpack serve --mode development --open",
		"chrome": "npm run compile && vscode-test-web --browserType=chromium --extensionDevelopmentPath=. ./test-data"
	},
	"devDependencies": {
		"@types/path-browserify": "^1.0.0",
		"@typescript-eslint/eslint-plugin": "^5.42.0",
		"@typescript-eslint/parser": "^5.42.0",
		"@vscode/test-web": "^0.0.32",
		"eslint": "^8.26.0",
		"html-webpack-plugin": "^5.5.0",
		"node-polyfill-webpack-plugin": "^2.0.1",
		"path-browserify": "^1.0.1",
		"ts-loader": "^9.3.0",
		"webpack": "^5.44.0",
		"webpack-cli": "^4.7.2",
		"webpack-dev-server": "^4.11.1"
	},
	"dependencies": {
		"browserify-zlib": "^0.2.0",
		"crypto-browserify": "^3.12.0",
		"https-browserify": "^1.0.0",
		"os-browserify": "^0.3.0",
		"stream-browserify": "^3.0.0",
		"stream-http": "^3.2.0",
		"tty-browserify": "^0.0.1",
		"typescript": "^4.9.3",
		"url": "^0.11.0",
		"vm-browserify": "^1.1.2"
	}
}
